

'Copyright (C) 2020  Intel Corporation. All rights reserved.
'Your use of Intel Corporation's design tools, logic functions 
'and other software and tools, and any partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Intel Program License 
'Subscription Agreement, the Intel Quartus Prime License Agreement,
'the Intel FPGA IP License Agreement, or other applicable license
'agreement, including, without limitation, that your use is for
'the sole purpose of programming logic devices manufactured by
'Intel and sold by Intel or its authorized distributors.  Please
'refer to the applicable agreement for further details, at
'https://fpgasoftware.intel.com/eula.

'Device #1: 10M08SA - C:/IIT/Endsem/Final/output_files/Expt.sof Sat Oct 29 17:36:10 2022


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 20.1";
NOTE "DATE" "2022/10/29";
NOTE "DEVICE" "10M08SA";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "Expt.sof";
NOTE "TARGET" "1";
NOTE "IDCODE" "031820DD";
NOTE "USERCODE" "00091DC6";
NOTE "CHECKSUM" "00091DC6";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A42, A93, A43, A92, A94, A95, A105, A109, A111";



NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "68";






ACTION CONFIGURE = L20, DO_READ_USERCODE OPTIONAL, DO_HALT_ON_CHIP_CC OPTIONAL, DO_IGNORE_IDCODE_ERRORS OPTIONAL, DO_IGNORE_INTOSC_BYPASS RECOMMENDED, DO_BYPASS_SECOND_IDCODE_READ OPTIONAL, 


L27;








ACTION READ_USERCODE = L25, L27;



ACTION CHECK_IDCODE = L966, L27;





DATA DEVICE_DATA;

INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 756;
INTEGER A60[1] = 13;
INTEGER A61[2] = 51912925, 1;
INTEGER A13[1] = 524452;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 1348944;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 120;
INTEGER A174[2] = 64, 9;
INTEGER A92[1] = 0;
INTEGER A94[1] = 0;
BOOLEAN A95[1] = $0;
BOOLEAN A93[1] = $0;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A42[1348944] = @
gAf00u@@@@3q6aP86Zmm4iDKJDresd@x@@@E14SK3y@t@x@@Vs@@@Fl@@@rc0t@@
V@x@@Hm0z@@@9W0@t@@_@V_z@@@hy@@t@T@l@@lP@@@@O_@@zlx@713qy@@xVY@F
14u@@RFH6uVY@t@@JU4WW@@@Vq@@@_dx@z@@K7E6uVd@t@@RTAOW@100Smr@lv30
000EW1Q03o06Y1C23O26m2CO040083m00000W028p03020W00G0O8m00Smp8qU01
402BCq4sOhP0G01a3m0D03028WC3Ie9OIvO300G@S500g7WrOm0002000000280P
790A8Wi0A08W2200000G000000000XAK00001200800W029014IG28W04G818a0I
9230eqIh0IGfbMQ201H08C3aGJm3A500mj60C6yGN03r3U4KO0000GX6A000WG_A
C01000280000008002EtO8emWkA3KOX5U0CG3W1Aim2LOX0q4OoXN2b3R00108En
000G0gzM0000b2014W0G018WG2G814904G28W04G0m7O20esQ100087L08pm0000
00ecQKJDri0KG5W1g100w2O8Tp00KPbgioAN0Ae2m0L2009Z90MO10000A00e000
14e8YCK17G828W05GKX8Y8200000W1000000W0_t@0000_6WgBF0m@@3000G4000
00mTkxkx90441W0t10Wc06000G000000l@ktV@z5W2g0Cmx00G_f1b36000q6000
008X4aG29B05K1O0I00000000uFw2AI000_l@10Wi23CtSpT0CG3W1cRkvCtS04K
y0210000mUsRlzI088201x100D6CqhO00_xF@ztVB05K1OW@00WSs4ytV0000A00
0000qJFwfdUB05K1O0z00Wu43AHC000q1000008ku4NSnN0Ae2m0Y300n9C000W4
00000UxDlzsRB05K1OWt00Wu4F000B2Q00uInW056oOCGt00000G4Y8Y890441W0
H00WW26000b300000Qe1DqGZ5W2g0CW600Gi33TL60W_xN@zt@2G1L06eV00e@XX
889KQ3Za860WI100000jqIh303q0m0QfbMqIB02da00sVV00016100000O3RinE1
01H0G0s00Gu460008100000t200Cz200000usRTxjtk0eWA064K0cw16O5000000
DeX6w4044101G300nEIG_v300C8E000000H4X8Y8k0eWA060H00ewIBXOEf4X1c3
00A7u10000TVu@FC@100CdA00W6YUK3pWgYg000O5x00GiWGkFEZDq1WO1O5M0sW
5@72H21G10RQDW0e0GhM3G040qHz1G040@KV0K00mQ036hQ000W201000utrZnmm
Q03gwQ0028WH090W52ulh10W000G000000W0800000004008000E1OW420WZl900
0OXH00Gu630W0gyKm00G0LY2W00000005K1800000801G1LF5CW0gaoh03G0LGDC
m0Ae2800W00001e2g0AxW1K5L00000OYR08oJ2J8M20cyLa7j4t40iV690esEX2W
Ae0e1A_FC2X0WNJal7I000ov4004A0K15u400eAA000T3kHX960000mNc000iQXO
2LXTG2GO0m00ve8_GdunU0aA0LH5G50UwYq7rYkG1Gm0N1W02000003P3W030301
HHAcEvrU1006LHqcH10C8AM0i2BGB5P10ZZI50Y@WS1u2000KcOE90000004kz10
WO1SApL3mzE04BGK20000Gt77MWMMo20cebA0y_3v2mLS1K5TY1cU6000JMapBL0
00mj000aBWM00Wcq000qACC_lQ0Y3m00W022800oIp0G0W040006orW_KD000140
0018000HnQ0000RW300X3O300mflHDO0vJ000vgJ008DWP00HBa2YAg_T023uauc
D0wl0006QXrHK1hc3004Y1000000040000KZg1010000001W000002Gzc6Kih171
O00sC700GIO000kbpWqLD0000000HWyeD0G0GGuj6K4G2000EyB00G940eCJ3000
2CBh1RgQG906000_I0000aO000002YxF70GS@nX80pVV00m_x3W8S@_H0Wr@F2XG
yzZ10YF@C41mxl308_@v000m3Z0007nGQrj00RtCD0Q000GbLpLuU30o5Whu2eAi
63iD00a7rj130MUK@d7r@XbjXct1WadGDM0i2B0iyeeI000000GQF300nKTRUK@d
75mP7QW235WCeW9FghY_t0jg10vHTB0WtVE0004HF0oZIbGbD00BkLuKOqoC3nNb
0000000GZ8400oZYA10000expZf2oTgPen@4AHu100Wgq000Y7riOuC8UKd000Z5
OmOnZ_Vyef1001O1W2QyN800WtY000Y75ii2GQ4U30001PN008UqkAuO910000ep
VZ7z@KJhewae4G00000_IX00Gye@7FwLzcR0Xh0WuHVRw4I00098S008UqPQKv40
0GgO200Y75I0WGy_t10Y7b400mos300Y7rcgPQ10NjRye0@@IK00pLIhtWOPMQ@V
60WHd5Fw@fr@VQz1cMcJ2800000Vh1008NUjku8A0KwonZURtSE9000000S4B000
BP10TdG502guuH@FjUxVHyaqYDGU_0Gye@7FwLf3IoJ@60W4ADjUUgIo910000Wz
22nNNpL10J_7bDq1WO1mAiWh000nP200elVaesE000ve8hVdunU0aA0LH5GLg4@d
WH20uBAo_t9b7C00OB9Y_l80W4GP2mGZq64Mj1vDdGMm6yzk1pIRGXr9SOT20020
0003pN008c030028008000001800aVnD0G0000028008000001801S@l10G00000
2G0000100008W00W00r1aWq06Wa3Y208004G0000040028000004001800000200
14000007Ft010G020000002SZk10W00G010K7G2000gW000alW1r7mGQ2sm@418o
13k4G800WzP2amVx6028WesT3s7t00140000008W0Mdk15mR014GWDoD8@T3g3m0
00WgG400IEO90e549_p300mU310092GK412100oo2040P00Oc861249YnG0IAHC0
m8L8300o5YH0WmYO640i92306J4o00WD1008iR00Wii000ifi1lIOG_x6i3l1BKO
GIw60G00001ATO060WW9a804e50Y018XXG00Hq05008EK100Y3e880m1A20GyW01
01ZGH000D6E000hmQMoxA2Ge0G5KGK9K2SYc0pg50Oj@J000s1I00809_py@@C@@
Fp@w4000000A1X00G8hWbvVfz@R00uRlC@Hj@V3mvG0av@@P_py9tK100o7P00Gc
@u5Q@92000000Ze600WJC0Gmxj0hU18pVU2PzP0088P_l1E_2WC@Xi@@AQcDX_@D
ONm4uN_0avFal7QG@@U0WMvEpVagHu100004j50oytWD@lIyi3Gc@tc@j1E4I0oy
lK1000083SpytWCuT20046Q10WC@7BT@b000EuS008p@RJtVrye_FcgtoytWBnZ2
0_@Hc@ZbWkA0800000U8C008p@@pytu0zD00XyNc@4_zl1efC0oy@m_@DGxv3Gc@
@dv@@P_@Vc@@dv@@P_@Vc@@dv@@P_@Vc@@dv@@P_@Vc@O00ui8pVg000HQB000SM
0mZ@H100000dOLS1T10pe8mVd89B000og8m@e0WO55B0MX5aGPzB100wm_00Wmg0
W1@Z2H50Gi0N1000BTEg0D004B0MX5uA00Giu_loi31Gk0S5NW1tz7500OVH1006
h20cxFAv@E0n2S5008jKxR10043v100fn00PfRGC@6iol1fzR0028WspCW020KH0
6WG00Wjt3Gq06SklA0miO000kbdlA0eBz230600GRvyh20y0nm0W100iM_@g0WDP
100ec500WP_V0G000008mQlO8lV30GX5100OBpV32xdXK@D00W0W000000400G00
00W0Kwl100WlqC00uj30W000GR@6010000H0G8h6080000gF2000DB4GLGrrfK5B
gOgk8XARL5IqP9LHhgMgEAjgQLfIrLHLNZALkkAewwKgYL00WAX000EBa@M000xm
U008DWP0GPL4oVK0e78Z50hm2qAz9m2bghovZ2008h710Wqdqw8VdqPf@x@@@F10
2Y00XG0W880Fy@@000GmfaR66yFdy@huKWSo8O92G7097aG5VQ5C0Of@x1zd7Wa3
8FhY400W0aXTK5HG8fB6WiA_FaZ@J7v@OLiiEw4Y_FXsfDOTQ3obcX_@h8Ww4Y@t
W1gJe@V30080K406H38Hr0IKWT21OdGH0Y4_F3000ESB00aS03z4mGWsLqJG591u
H3t6qJ03H38HF1CaHG5XBKHH0Oao03000Xb5004Ta1010G0W00K2k1800261tWgp
IOPR3APmWa0y0808004200100D2i1000eI6I890FQ4G800mX0600oSo04000NToG
H4CqLHl00W1LA00avKxD7vQXOd0006q200GANLSj238008w@F1G00G7cinw_OSDV
20010sQ910020B4dmejUaHG52008o8W400GFU600Y7ZSYW30xgjD00e9620097aG
yOXyeN8Fxro9V9ipN5118nXVs0000pw00WHm1Wbys600S9E00Wa38N8u0msXh62l
1jmh200uA@0008170QRXaxhyeGcM__wX7xF9Z0R000eJG00G9u0mjcOaSGEBVMHo
1pK1F3XBO300eQ0100C170YSWgBJb8vWw000RJR000Au0000000060m00C0W10m0
0000000m00C0W10m0006Os0006003060070q@l1000O00S0W10O00000000O00C0
W10O210YW0U0C0GGO090O0m00u0mlP6000030W30C0030G00800010W0aFW1X00H
61644W1P4a00040020CP4i1W100bE901h_VYi@d4ZPzaL41s2WCWpioQXASs0bs2
0X7JE0gvczfhO4y7Y26objVeuhA000GxL00GDt00202100G4001008000602W00G
4001808000002W00G8001008000202W0WG800H00G000200W0YW800120G0002W0
W0WW400020G0002G0W0WW800820G0002300001800828GJ@R04W00X8002008008
200W00X8102300000200WG0X000220W002200WeC2a0803G61F00809Z090000aH
m30WfV2Eu1020C17m0084XW3C0000e0W04084317O02G0mW3OW0W0Im1608218u0
3G0404S0600002Em0O10X2000002G4S0600402E810010e0102E81G420PBO000e
WW3UG8a0Gm19u7708e26s7@P00m5_000y0E0ig_s000keB00aSG2XZ@i00800000
000Q59004v0v2G60w@@7W20Wz@ZNOq9000gWK0003e1WgzCh@Vp0WGoaQWDnO@G9
3rr@F6sv80YQ8XwG0UrN3000kRB00G1s0mS@LxeF18tWj1000e600eg@d10D55R0
sXDyV45n200M8xhjHnm04S0u1EaGqNCdyb1000gu300W1R0OY_gje10aRms00W6A
1EXOKrg@V68M800W6u00W00G0800402@NR000W00G08d0O00002001W00G0G0040
0002001010G0G004z@R0400XJ0CW000GY0CC6W18040EqsW41O0004bB10We3C8h
JmovF10OzP0007i100KUlP000mW6004EmR0W0D2ztCFh50P3m606OZ4@J30AW200
G0S0000800G00GK8V50G00W00W0001O2W4INNYz0CeH0I0000OHU0009mnMx9001
0eqU3W00002000000200080200rvR002000800htR040000004HrR0002WX0I8HW
AwmtW_zD000qiW100AW30NnZHg_900048L@76odXZytW000G@y9agV20002Ir@Xl
_n8Z0X000AA70002Ra20ANBMQfMADjqSgMKw2j8nQfLgluK2IHoQwhrbGf4oXkbQ
HhBHBfdYMAtIBMgMf9DjEvbKIIjIRDVLg4vaKfqtQBfL9f8zorYbMgbIHBDcg5bk
KBIfMQawBEbaKagc_OT9KAfSeVfMqwIqIQ000VW100EWZOqP300u1b10Wq1a3000
HmSI3WnVBs0i3RWvIjJ00YCQAnjdS0vzfES@@L005IEbOXA_@G08e2f4dGIs9JKs
18QvSQVtI00Wam000IDGwKY9lV_aZdF15o70f4@Vso@d8z@f4@Mgj9dHl100WnGD
00aky@fI3SAn@dICsz@7502g_KYtBwWtI9kkspxAYy400eRbIy@f4Ri000mGXz8b
uV0GW0q@l16IL0I9MTQPf5qgaqI9_AoHlIQXrbGhq000UdAbu@J9_@ib@FHwwI9k
zgAJEiI6000qAI008NQoJ9Mw0V@Fbu@ZeNE00mKe600I9EymbhEbu4IddP0etjPB
xTvGC30000002MAnadsx@f43S9z9dIV20WAVI9_@KY@Fbu@J96o4aJBbu4Yo@gqw
D000yEt00WKYbB@VmAvt0zAB0f4xNemRaIiGn1d00eDcKYRdbQLQAnQrQi1000_0
600aIy@f4@Vsob6RRocUJ0I9kza38lwydV_F1TQ70f4@VtjS200cKo00Gqo@d7Dg
f4JU@y97Fl100W2n700atxsn6WTO3@dIy@Pqh80g_Xqb@FLwXJ9EXepVsFZ0GAnX
dJFR_lL0I9_@KY1hzykY8F1Wk50H1pMAnor@lP0G1KI9_@KYhcbMebIIBjKYl2zA
r2MNYMI300uTA0I9EX2jD300ake00WKYthuMZxMt00SVEPB@VYqncISxLLcSObF0
0QZCNQoJ9_@0V@Fbu@J9_@KYX9SvgJ9sWoeO6000WTt3WibzEGqapdt016B0f4@V
Ql@dIieHVnSAz9WAV08ktjJ9EyiUVBbuzApUierD000Ojp00WKYhB1vqI9_@KY@F
bu@J9s3QPfbqgqqI9_AoH@IQfrbGhq000_0B8uwI9slyU@Fbu@BaUF00W86500I9
kz@ltBcU6wMt900GZY300obEmY3w2004a_00WKY@Fbu@ZM_@KY@FbuMwdFvuvJ00
5oNUlU7R0sXDyVAn@dIy@fBJOYx630YI9bu4YEFvOwD000ult10Wmbh8W@XHIp0a
Ii1vqFMr@6000y7V00GAnxblCRf4ZNxvT5Hk1000Gj500aIy@f4@VAn@dIi7iGhI
I9MBAr2hMYMf100yQA008bu4wMlhirJ00f7LAn_bddnrrRWxp1Wibj9GmF9Md0a8
Dsf4RJqNhwYv18Uv4ggCvmAV0jH2GkqadICXrIhI6UO0G00WtO2GAngN0L5fVRM4
u@0WuBCFwahPC1J0D0f4JUuoLdICpLBR000eU9200PBlTWe9N8g100W05B00aIy@
f4@VwoYMIF9frZQAz6000CqI00GSlLSl@mMq00oDGbafT50DHJMlXqcTK2eH0I9_
@KY1hpIpyVW0aICOnWd07i4WKYbkzS30m2vdIy@f4NDBjKBbcMQf4V5wNg5jk4ja
600m7O044STf4lNVlC3WnJ9ltSoPcJ0q16f4@@RsYc5x3Dmd00A_zubL9@T6IrEd
uQnecU6_VAXeRJ8xM9w8G50yJ_vIpGdxRKSGE97SIRl9aQm3j0mGmlCKkW4j@_mp
@90W_38bu400800000ij@466gYWXv9a1CI9_XsyVut@408000G0G8NYA09000001
00F_PAn9KlV2X1bG55CKPm99AVIfoaqkS2RvNHG6FCEi1z_R0KG100O0D0000hBu
XKY7BAQ9gZcaWfPOX96w@F100mfg200oZ_XYbNgCvPIn638000n_Z1004W0fO003
WIAnFaUIB5fSIUtU4X23n64IGAO00408mB3W100q5k1000AO6004ki100G0W800a
V2I5blH@4OKTY4HlmmIW6020GeT660020KcY40808Ydt04ZB0f4hLJ8LqE63rueI
YEUK0Z4wCP0oMcX4Ume7562aFd8rI8CeDgfVcsWgWBS1GYq6qAK8zkbGp1s4Na4v
OaGtHjaV49W000mzI0aZzLX@NHiyvaTJB00000hY0aIi1DG9HKW6q3L89L0JEFRq
Jn6zIjHmKCKkq3000h5300akS2HGn300WWALufghAANQZifE10fhTgqFqv5CXDQG
27vqsHE1mmGC0O00000ry2GAn6azJ20010Y_WXuKy8xI3gRWaukm0200GSP6SNh1
0030YCBX2pI0400HMb94QZ1000CwlCXWRC8I03W1000042e_C30W545ky3fumG_6
RaiP28006YYhbmuaeJ83AwHYq62f3X4IyXXQVC0000100O22200QW30000CcKW1b
6aGj1C4Mg1jbQG2TOS6i1G008Y00XgrI040Wmxm600C20600000eUo100QW30m20
e0W20G18W0400000020W00G0880442021W00W00G0810a02G01400a08buA80420
20010W0W40818002000410Y0W20e0800ITg6030m0W80848034W100mLKoNsWuJJ
u2v4IS8XW_P8RFCgnZXkyaONP3010GKed1CoV0I9sWNaD030GGZVFyni18002sNs
WW@s040WHC3CaCW1DLO00G008006003000XWbWS20406pXXaE7yelb7wp8110G0W
008000iHI008bu42@mWXfJ8PQ30030y9B3r2o0000Z2EI89B3wvmWC3C060WHe09
010m000G2X00Wi1y0080Gp6Cq123HTaGs0F4DW4m004000HJU008bu4ADWXmdm8z
X4oVmWM1te8W7_zr0QOF0f4x1200WKYP00m00810Yi1U041012002G0400820gDM
YFlDesu4000F1M00G2S0000W00a00f4R060000W02DVP000100G4000000830aIi
40028I9E182000020400800848sO301284MX1013005080040460010G000aB_f4
pm5v6aIC6nfbGAn9KMS2fZRGfA6aIC90W0OI9_X6OI8bu4o8WXMcD8ZWD2Fc1W00
018d0010008_If4d0BqgaKYrYIjmgbeLQ000lc200I9UcqcP85p4wDfYWmb00vkL
Anx10088DG3AHYXsyVeZj7ohiYmLL92F3oH0ZKXO8pdGw7D18000ThRWVX5Wibt8
KvnQUibcbCezBIO0o04sG2vrQGXLR4s0LHtMH@HCqtRBhed0pS5WKYh8LL62khY6
zU8ptPIurZmQneoB9ImAXe7V87h4uJc04lS200G0AwyXi_lAyb40W004ux6vEuHE
xX0W00O1V3ecH0aBj4HbQGiaUyZF3LprI_OCaSW4nazGz0USql1fUbGX2FaEQ20v
S0I9EXqALfQkAIwtWWGJ8CvAQbfYygV88U30008K5V2bQ9HMs6KEi1nPdWPw7WKY
De9LXYqsWoELfCaDAvEXKIbe@@G000AZ6008mt7w04cu2ifxNU2R0Zv@D00RxNg1
Xabg7v6eIBv@awV2v_NHurCmVU08bO6A1ZaIOnemT32ZTcwWOe3nGIEM50m3sXB@
GvygaUh4HuYHEDRqmaArwlHwQI0000000Cem10WKYV8HVFIbAXUejf796IZbgivD
000uJi1IqflAHkpGRnIqPhDrsoJkq9000iIM00GAnCalN5zV7IjPLKYgJTrV2008
00004000j0E000WQ08TV9QiBX4OLfQQIYq7Zs@beuyGYrlYs_D000KhW00WKYPeG
G32Q@diHPe54L2pMYW0yeodDQTF108Z@fz_GvyUar6I9moGugR4dTBjsNXfZ7Wqb
J8wB3YeFgkAKfIxbI_o000WEy700YxrWSsU8eV6YNrZiEa8pL3AVlYmzPehN6wre
bm_D8mO3oj9X6gV0400WJB2WmbJ8RP3wbLYgrJ8dE6gTMYSHO8oU3wA_XObJ8T3C
QO_XUYbeyR6wyFXe_aeaP300jTdIi1P4BHCCLall19xQGS1LaHC3X19Hw@6OqA00
0Dm10010W0G30e14W0200060030G0080400212WX0m00O00E0400I02GW0800G00
80800A020W8_s40400111GW0800G0050a10I018W0600H0G40400A012WW100004
0060030X0WOG0C80300Wp2200q070aNh1G002Y0mWgzP00C0Gqb6afh1TwQGokCK
xt3TMd0C0010W10HFd00m0WMYD0034VIm9ach1zKRG9Q9qeh1TwQGup64vT2DppG
EcFqzj10030gpsW2jD0000100e7e100SO30wbrWa3Ce4x40010aYi1z8R0400Xaa
VeUW4g4tWoWDe6O3w_tWa3CeQS3AIs0Gl50f4pGLe6aBW111pGN4Cqd03D@RGZr6
4vS2Lep00W0WMVC0400WuZ3W0aDeE36wvtW80G030mGKuL4oW1jbd00m0WY6CeQW
70020Kgj10e1CI9s00G008402Q5F1C001DBRGN56a4X19UpGR26q0W1T0aGf394j
i1v0m00G80800200WdC100aIS2W00YA0FXgbD030m000G08W030100100600400C
0WOooF030mG00G00W010X00I002006009008_P32WE100004014W0800G0000McL
An6KXi10W01Qlt00W010020G00404600H0G00G0GC00300W0m00A0000014WGqy6
02400A0W10G08800Y0000W0010040002WGin903008bO3000001018eU3uN40aIS
2TSdGAn6qg2359R0E0WXKYV82O6MRjYKYt8o_400W0iQF33GRGLz6aIC3m0022IE
X6yP000054W0WGpJ0000I8_60100uYV3K7Q0aIi1qoIBfLffbIyLaZ_bqIhBXMf1
00y1MAn2Lfs9R_dW110WKYth_A6wrfYSzD8e@4Y@IYiLI8cTFI5NYY@D86ALA60Z
sSJ000Che00WibDeFU6IWDdob9fBP92U4ZGhz88M9IOF1000fM500I9cXCyt8iX7
g1KYC@V8LQOotMYAcbeJG9oxl200WGA000I9kYuwz8Hx4gB_XM3c97M62s_aw4Q1
004ZD00Wa3EPcSsMGV9000Nq500obEXylzele7QCxX87ufIHCQatZMr3vvV3000X
f8008bOCgN_XT@DePP6ANsWS@D8My42lhYU2m880CQWpW6HVOr76AsN2000j2600
2yrW0wJesrPYqNhaZzetW7wzt0042sf47Iw3LqnV2zxdGbP9axD3XHWHU5OanACt
_N11l3Webj9V_4Q1@XEHfg4_M000Xp9008ktDgptZIuVetznIgj5dBF0XBRGBbC4
Sv616WNY@g4FV20ubLpxzaoljfiWbA@l504SYPB@Gg4Q5M1R0W8kI9_X2jm880GA
11iNyR100yg010W8Ac9ydJYQ2F00mf0700I9sWY@F9j@GAzPf4qj100WG_t90W5Z
BbuG2GPoK_LHZo3GW3maNl7XC1M1DXKEC300WhuE00aIi1bHNH6RO4Up3j5dGh_m
4cZ45@ZHN@U4jL5MiM0oD8XC@nesz4gxfY_RJ8Cn4AWVck@9ftWJQYE10yfef4RG
@g9KRm61wQGRYRqm86Xz@0pT700q070W40G2010W2GupV30004002010W0W0G8WG
XD0202020W0000J0W80e00A024WeF@4UAs02000010G0G0081400200GAn6W0G00
800GOp602018H03000EwI00G3S0G1xR42S2bkJI@1Uq@l10Gt3J9cXaxb8Vu7o3s
WsbD8LV9AncXu_h000uZb10W4aD0002001WWc2v9uXDY8F1Za20f4pGDl9Krx31F
RGI@IqUj4DBAH729Gpn08R09QqMYi1_9vV3WSr0aIi1z0KHZyB51k10OzmJ9cXdS
D8_@70W0001001002m409KHe4x1OGZ0a0000mYy0GAn9q0i1fsR04000O002000G
00081000000Y00000C4000G10W000W00002000000YPWD0001G2x6aIi192mGUm6
S_h12400W00800020K00GAn9Ceu3jwp000GWEbJ8bu4w@FXKYD86U3I9_a5ZV040
0GS_9ijW1f4@G61Iq@V219NHAn9000WWf00GAn6mIBqI9fbMAnNXUbQ1hBHBf100
yE50f4dGjcRKcsI000KT900aIyUH7qIMlRK@BFfsAnHps0WV2ARv4I86fI7NA7vS
0WHI5RmFdNZKvomyxj70uPt000q4Kf7R_UB00uLy200v6mTS3R30PYf5FQ3pw1E2
00cP60smEP2U70X6aMsjZ1WipAe1fnnA0ilEg0GOy2B0sW5_F4Y@3iu@WGgJ7k0m
ELq20BKAl0U100K83000100180YWI3P8xV680W804GG0W20G@@L80080GG0HV0R0
G00mm6100kOaWgL4mx000g8Zaz130042Q10We1C300OHydFKmlM00Wx4C004EmR1
RvQSVU001NBCiOh8S3000Vm6002GxP0y0EP9MT@@9WBT18vW400W0KJwCPIcPqp9
Ws818o1o1G0oKk7a9@R3h3700O0D9boC00GIO000f6GTK39aQSBvJa90sZF00G11
vMD00u8V200v6iD00ecyQOk@V3KVY04R0pl@d0QA2WO3UUVV3K3b04s0s0OXRom2
R000566002E0y07I8whaJ_A10GbF0006YjlQ00mYC000oDOR0q07fzp60088r300
QW30020W0W00G080mCy6002001W00G0800400002001W00G0800400002001W00G
08sSq00002001WE1m0000892aGVU6a8W1z@RGY0C0WekCwWw0W3Rq@VQ00Cq270E
0001q000A8Rc8cW10lxMs0CayVN0uPj00034vg1XCsLpK6000wbi0001u0000G00
W000100r@R500100200E1G250NnU06q8090OHU00094@X1200000020008ObG3IJ
r0W0000200Ubp000G00001EwmWs2D04000G000000G31aGY0X00000jn000K0dfj
ge@V3G000q@l14000gRb10X00z@pGm76yUd495OGUN6qh83804063WXLOPOR16o8
e8Ac3000XDa20bJBBjaMbccqELBKUXM8PjqKwNSI2f8nQzrgbeK2oHtIQfrbGhqJ
XMbRHBBLBfbcMEzIAIgMfPjlAfaSIIfwRDBrg4faUvqoIBfLfe9DJr2bNg5ILBDa
_5daKAIfMViQ9AbaSqlaMQT9qAD00WFm00074uoRyGP0I7WE00HDPmAjnV3WO3mE
i1iJ9cjktheeVmeTF04lSxH@0Mb3lbNP2_1U0I96cTtpaWA0GAn6armOzYQ600OK
z000HB@VUqecICvzpdSyy6000A4V00GUl@dIy@PB@VAni5ppmz@@0045Zqb@FLwX
J9_vOwJWIA3GAn@NzlJ0Y40I9_@KY1hzykY8F1Wk50H1pMAnor@lP0G1KI9_@KYh
cbMebIIBjKYl2zAr2MNYMI300uTA0I9EX2jD300ake00WKYth@AZxMt00SVEPB@V
An@7sxdLLcSObF00QZCUPoJ9kw0V@Fbu@J9_@KYrASvgJ9sWoeO6000WTt3Wibzk
tsapdt016B0f4JUQl@dISlHVnSAz9WAV08ktjJ9_@iUZAbu@J96i4aJBbO6YodgO
mJ00lxMAnrrywO00WU9B00aIy@f4BDjiqIQLQQf4V5veV9jqwIeLQ000VW54STf4
xNUl@dIy@5Il700G4Z200f4tUyoatWOoX@p000G19300f4BTIs930HPFQv@J9_@K
YRiV_aZdF10K8VvzwTi1O7sm@f4@VAn@dky@fIxKAn94TUonqR000mVl300f47UE
zZLzl1000@n700aIy@f43MxvT5Hk1000Gj50045CRf4BN@@cH1K08bu@J9kQMeL9
f4h5bQXLBHhq000UD500aIS25QF600000aUKf4xNXe6tjk1kF70oM_@4fZ50qOJA
nL3WNvDt0kZRmRo430Zj3C00pC00mCc100gdtO00WWk3002D0wW6UEpb@Zgv@4Ui
40VCJ@@930kb600iXM00Wq@T500u5C10Wu2i100eAL10W_@jHLL1G@@saEG2kjC0
2Nm00KLLT20JS16000KbgggQS1saEGE0W5QYY0um5W9BY42NOci8C8T0U41y045H
2fJyJq5i10UHEK43QBmL00W58000YBmWe8ifb33g5ncq1o1000W6h2We8k500e1K
00Ww_v4lf2GI1a6fGfoO30otX10y@@90GG50641W19xyGH0Ra8W700WYX6004Em3
f_mJOGXuXH08u03gv9XI3Oev03AuvXY0aetd7I4O30G4b000C25SOhvB0H6WS839
R2H0e@V21mridH0Zn8q80Y0dWRhU@@4S_t000Bs8c@q0mT17Rw@Hj_Vyio100U8n
Zbo@tWqrR40v@Vo190000i4UZZsFXgzD00q6Pa3Bruma00000WvP0002WC00Gf@3
301L000O0Q00WE@PcaO0Gg1K7rG2rX0SL86000StM00W2i1Wz_hsHV2Gk1R3000G
D00G3vF30QAAs0i3Ru@8AY500iWR00WIxm6533Gm1W7uG2HVnSoN6000eYF0006i
1Wn5hsY60Gk1R300Q0700GPzi9ew100Dm10010W0G0080400200000000G0080aJ
0C000010W0G00808002000010W0W0080800Y_@D020Wm906G0008H0663m040200
1000000a80300WeS9004TW19xb60kOL00W31Tc6000Ce100X3y608GZOmCZ3M2Gs
0Wr@V2UMB00m0RqUMQ0OXy1002W3000010020020040tLM140040080J0aGtYIi7
W1D2G20000Bo30081EkNB108000W0000000100040000004000Glob0020WyCD01
00040000004000G000000W0O8W4I484000jY100e0E0C@M55WOmKd9qGW1z@R000
0eYGCe_V3k7mW_@Duzk72_qWs9DuCW40004C6m3t2mms2CaHWG0005b3000XDI10
bh5BjKBbcMQELBATXMaOjqArNSA1f8PDzrwIeK2vGtIjerbebqJHBbRf5BLhqacM
dyIA9fMfjclALYSIgKwRjbqgaKaUvQnIBrIfeb6JrYINg5fKBDIz5dIIAILJVik4
AbKEqlKBQT9Q9D00WFm0007mH@@i100yWo00Gw0o100W8OEf1mul5R0sXDmSGb90
0H6DbOdQzVI0mbk97GUkqC4lCpz@d00K8vKYhE9xa9Ax04jy@vHZQAnatFVonpdW
2v3WKY@FRv@Ja_@KY@Fbu@JN_@KfD8bu4oj9v_@D00_@UAnXNrhP1MR00ydlKYtB
VvtI9kkspxAYy400eR55CRf4BTUW905008buz4000cIiP4qC0I9MTQPf5qgaqI9_
AoHlIQXrbGhq000UdAbuq22F1VR00f4@Vtw81004dl00Gso@d8Tif4tULb97M930
00Q5900aBDvf4BTWl@dIy@f4@VAnQ5kSrf4dGwy37IP20OtzoMsxsvJE7R30GWnc
Iy@f4@VwobMIVofqd00eoduUzEbumpwzjKY@FbOmIGEjKYJeYyhY1t000mxS300I
9MkUr1hzS3qhi0aIiVX27IAn510QZ9busPfMbcIiMj6R000WFW10011BNAn@dtx@
f4@VAnjdS0vD8oyp@COv208bOf36TuU@D000CgU00Web@Fbu@J9kn_vJEUU30005
YF008ltjZD0xm6_FbuRha_P00000OCgJN_@Kf7Ebu@J9_@KY@Fbu6RFlh8oJ0eR1
GKmibIiSz@R60K0bKYzxwO3I9MB120000000003HL008bOrPf5QfaqIBbuhGlIjW
rbebq000Ud2WKY@Fbu@pM_@4fb3008ZO00WUi16Oc1Ga1gqzU2fW3900eMS100H6
WSi46300cnC00GVy63004qT00Ge1G7qmpXiaCFW1W5@xrtn3GY147nmm95DVsI97
om@HKDc@84WWC_FwZ@3BPxgs4200a4l100qO30RSNjNv5WS32100Gii00Wq@z0rP
1G@@XmOa0e80Hw@F4CNE05182000000W_C300YRW1Udlto701wxR32uT_yUV0w@N
220W0z@d00SkVEtF0D0Y1100000Wp_tv@x@t3000xkdzxB2Ga_@n000uAc10WKAs
W008000G3W200r5w1505WY3aeGs7WGj04Ax3T1yGH0Cq@F60049A2Ga_@D000i1n
00WmDyeaYR10008Yx08Ja@pDWxu6_FbY@3tu@CH_FA5Q@cdXW@B20EZZ@@@@306e
103o0WXO0m8C0O260i03W10;

ENDDATA;

DATA TEMP_DATA;

INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;

INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;

INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;

INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;

INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;

INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;

INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;

INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;

INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;

INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;

INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;

INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;

INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;

INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;

INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;

INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;

INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;

INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;

INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;











BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000]; 
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;















BOOLEAN V189[80] = $80000000000000000000;
BOOLEAN V190[80] = $80010000000000000000;
BOOLEAN V192[80] = $00FF0000000000000000;
' VARIABLES

INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[756];
BOOLEAN A45[756];
BOOLEAN A30[756];

BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];

INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;

INTEGER V77 = 0;
INTEGER V78 = 0;
INTEGER V186;
INTEGER V187;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
INTEGER V188 = 0;
INTEGER V191 = 0;
BOOLEAN V233 = 0;

BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;

BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
BOOLEAN USE_REV0_PROG_ALG = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
BOOLEAN V230 = 0;
BOOLEAN V232 = 0;
BOOLEAN V393 = 0;


ENDDATA;









PROCEDURE DO_READ_USERCODE USES TEMP_DATA;

V105 = 1;

ENDPROC;





PROCEDURE DO_HALT_ON_CHIP_CC USES TEMP_DATA;

V230 = 1;

ENDPROC;

PROCEDURE DO_IGNORE_IDCODE_ERRORS USES TEMP_DATA;

V232 = 1;

ENDPROC;

PROCEDURE DO_IGNORE_INTOSC_BYPASS USES TEMP_DATA;

V393 = 1;

ENDPROC;

PROCEDURE DO_BYPASS_SECOND_IDCODE_READ USES TEMP_DATA;

A175 = 1;

ENDPROC;











PROCEDURE L20 USES TEMP_DATA;

V101 = 1;

ENDPROC;





PROCEDURE L25 USES TEMP_DATA;

V105 = 1;

ENDPROC;


PROCEDURE L966 USES TEMP_DATA;

V340 = 1;

ENDPROC;


PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L141, L1190, 
L1223,
L124, L113, L108, L93;

CALL L39;

IF(!(V101 || V103 || V108 || V107 || 
V100 || V102

) &&
V105) THEN GOTO L38;

IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;

V3 = 0;
V4 = 32;
CALL L101;
IF (V2 == 0) THEN GOTO L28;
IF ((V42 == 0) && V101) THEN CALL L1190;
V3 = 0;
V4 = 32;
CALL L101;
IF ((V42 == 0) && V101) THEN CALL L141;

L28:

















IF ((V42 == 0) && V104) THEN CALL L124;

L38:
CALL L93;

EXIT V42;

ENDPROC;

PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;

INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;

IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;

IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;

IF (V42 != 0) THEN GOTO L84;

V21 = 0;

FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];

L40:

V21 = V21 + j;
V66 = V66 + k;
NEXT i;

l = 0;

FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];

FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;

GOTO L42;

L41:

l = l + 1;

L42:

NEXT j;
NEXT i;


V88 = 0;

FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;

L43:

V88 = V88 + j;
V90 = V90 + k;
NEXT i;



V94 = 0;

FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];

L44:

V94 = V94 + j;
V95 = V95 + k;
NEXT i;


V179 = 0;

FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];

L45:

V179 = V179 + j;
V180 = V180 + k;
NEXT i;


V211 = 0;

FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];

L46:

V211 = V211 + j;
V212 = V212 + k;
NEXT i;


V223 = 0
;

V224 = 0
;

FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];

L47:

V223 = V223 + j;
V224 = V224 + k;
NEXT i;


V22 = 0;

FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];

L48:

V22 = V22 + j;
V67 = V67 + k;
NEXT i;

l = 0;

FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];

FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;

GOTO L50;

L49:

l = l + 1;

L50:

NEXT j;
NEXT i;


V16 = 0;

FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];

L51:

V16 = V16 + j;
NEXT i;

V87 = 0;

FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];

L52:

V87 = V87 + j;
NEXT i;

V17 = 0;

FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];

L53:

V17 = V17 + j;
NEXT i;

V181 = 0;

FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];

L54:

V181 = V181 + j;
NEXT i;


V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;

V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;

V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;

V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];

L55:

NEXT i;

V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;


FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;


FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;

FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;


FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);

L56:


NEXT i;

CALL L106;

IRSTOP IRPAUSE;
DRSTOP IDLE;

STATE IDLE;
IF(!(V101 || V103 || V108 || V107 || 
V100 || V102

) &&
V105) THEN GOTO L84;

V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;

IF (V4 != 32) THEN
GOTO L57;

FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN 
A17[i] = A17[i] | 8;
NEXT i;

A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;

FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN 
A17[i] = A17[i] & ~8;
NEXT i;

L57:


IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;

IF (V42 != 0) THEN GOTO L84;

FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;

IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;

L58:

FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;

IF (V4 != 256) THEN
GOTO L70;


A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;

L70:

FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;

IF (V4 != 512) THEN
GOTO L71;

A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;

L71:

FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;

IF (V4 != 2048) THEN
GOTO L72;

IF (V103 || V102) THEN V38 = 1;
V38 = 0;

WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;

IF (V4 != 16384) THEN
GOTO L1187;


L1187:

V203 = 0;
CALL L107;

FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;

V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;

IF (V4 != 131072) THEN GOTO L84;


V203 = 0;

L84:


ENDPROC;

PROCEDURE L85 USES DEVICE_DATA, TEMP_DATA, L88, L458 ;

IF (V233 || !V76 || (V42 != 0)) THEN GOTO L87;

A18[9..0] = $003;
V4 = 32;
CALL L458;
WAIT IDLE, 4096 CYCLES, 5 USEC, IDLE;
V233 = 1;

FOR i = 0 TO V1;
IF (A94[i] != 0) THEN
V191 = 1;
NEXT i;
IF(V191 == 1) THEN GOTO L86;
GOTO L87;

L86:

CALL L88;

L87:

ENDPROC;

PROCEDURE L88 USES DEVICE_DATA, TEMP_DATA, L458 ;


PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;

FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L91;

IF (A94[i] == 0) THEN GOTO L91;

V77 = 0;
V78 = 0;

V30 = 0;

FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L89;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;

IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;

IF (j < i) THEN V30 = V30 + A94[j];

L89:

NEXT j;
V31 = V30 + A94[i] - 1;
IF(V31 == V30) THEN GOTO L90;

PUSH i;

A18[9..0] = $00A;
CALL L458;

POP i;

PREDR V77;
POSTDR V78;

FOR j = 0 TO 100;
DRSCAN A94[i], A95[V31..V30], CAPTURE A45[79..0];
IF(A45[79] == 0) THEN j = 100;
NEXT j;
if(A45[79] == 0) THEN GOTO L90;
V42 = 12;
GOTO L92;
L90:
PREDR V77;
POSTDR V78;
DRSCAN 80, V192[79..0], CAPTURE A45[79..0];

L91:

NEXT i;

L92:
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;

ENDPROC;

PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L85
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;


CALL L85;


L94:

FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;

IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;

L95:

FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;

IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;

L96:

FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;

IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;


L96a:

FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;

IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;


L97:

FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;

IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;


L98:

FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;

IF (V4 != 131072) THEN GOTO L1193;


L1193:

IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;

WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;

L99:

A18[9..0] = $3FF;
CALL L458;

IF (V105 && (V42 == 0)) THEN CALL L113;



L100:

IF (V42 == 0) THEN
PRINT "DONE";

IF (V42 == 1) THEN
PRINT "Invalid option combination specified";

IF (V42 == 6) THEN
PRINT "Unrecognized device";

IF (V42 == 7) THEN
PRINT "Device revision is not supported";

IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";

IF (V42 == 9) THEN
PRINT "Device is not blank";

IF (V42 == 11) THEN
PRINT "Device verify failure";

IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";

IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;

IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";

IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";

IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device"; 

IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";

IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";

IF (V42 == 20) THEN
PRINT "Device is write-protected";

IF (V42 == 21) THEN 
PRINT "Programming file size is larger than flash density";

IF (V42 == 22) THEN 
PRINT "Programming file format is not aligned with flash type";


ENDPROC;

PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;

j = 0;

FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;

IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;

L102:

V2 = A12[j - 1];
V3 = j;

IF(!V216) THEN GOTO L103;

V2 = A105[j - 1];

L103:

IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) || 
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;

A41[9..0] = $066;
GOTO L105;

L104:

A41[9..0] = $006;

L105:

IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;

ENDPROC;

PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;

CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;

ENDPROC;

PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;

FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);

IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;

IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;


NEXT i;

ENDPROC;

PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;

STATE IDLE;

V27 = 0;

FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];

V27 = V27 + A25[i];
NEXT i;


IRSCAN V27, A32[(V27 - 1)..0];

WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;

DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;

FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;

L109:

FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;

IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);

IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;

V27 = V27 + 31;

L110:

V27 = V27 + 1;

NEXT i;

V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;

GOTO L112;

L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;

l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;

V27 = V27 + 32;
k = k + A61[k] + 1;

IF (l == 6) THEN
V42 = 6;
NEXT i;

L112:

pop l;


IF (V232 && (V42 != 0)) THEN
PRINT "IDCODE failures ignored";
IF (V232 && (V42 != 0)) THEN
V42 = 0;

ENDPROC;

PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;


j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;

IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;

j = V84;
k = V84;

L114:

CALL L107;

FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;

IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;

L115:

FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;

IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;

L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;

IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;

L117:

A18[9..0] = $3FF;
CALL L458;
STATE IDLE;

FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;

FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;

L118:

V84 = 0;

ENDPROC;

PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;

j = V1 - V84;

FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;

IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;

DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;

CALL L123;

ENDPROC;

PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;

CALL L107;
V4 = 512;
j = 0;

FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;

l = 8 * 3;

FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;

L122:

j = j + l;

NEXT i;

A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;

FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;

ENDPROC;


PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;

INTEGER A58[8];

EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;

FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;

PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);

ENDPROC;

PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;


j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;

L125:

j = V84;
k = V84;

L126:

FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;

L127:

V84 = 0;

ENDPROC;






PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;

INTEGER V85[8];

EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;

FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;

PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);

ENDPROC;

PROCEDURE L135 USES DEVICE_DATA, TEMP_DATA, L458;

A18[9..0] = $00A;
CALL L458;
PREDR V77;
POSTDR V78;

DRSCAN 80, V189[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;

DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;

IF (A45[79] == 0) THEN GOTO L136;


V42 = 12;
GOTO L137;

L136:
PREDR V77;
POSTDR V78;

DRSCAN 80, V190[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;

DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;

IF (A45[79] == 0) THEN GOTO L137;

V42 = 12;

L137:

ENDPROC;

PROCEDURE L138 USES DEVICE_DATA, TEMP_DATA;


V188 = (V187 - V186)/80;
FOR i = 0 TO V188;
FOR j = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A93[(V186 + 79)..V186], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN j = 100;
NEXT j;
IF (A45[79] == 0) THEN GOTO L139;
V42 = 12;
i = V188;
GOTO L140;

L139:
V186 = V186 + 80;

L140:
NEXT i;


ENDPROC;


PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;

PUSH j;
PUSH m;
PUSH n;
PUSH i;


A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;

A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;

A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;

ba[31..0] = A31[j+31..j];
Call L849;

IF (i == 0) THEN GOTO L1224;

i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;

IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;

IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;

L1224:

POP i;
POP n;
POP m;
POP j;

ENDPROC;

PROCEDURE L1190 USES DEVICE_DATA, TEMP_DATA, L458, L850, L1223;

push V91;
V91 = 1;

m = 0;
n = 0;
FOR i = 0 to V1;
IF ((A17[i] & 32) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
m = m + A25[i];
NEXT i;

FOR j = 0 to V1;

IF ((A17[j] & 32) == 0 || 
(A17[j] & 4) == 0 || 
(A17[j] & 524288) == 0) THEN GOTO L1191;


A17[j] = A17[j] & ~8;

A31[m-1..0] = A30[m-1..0];
A31[n+9..n] = $006;
IRSCAN m, A31[m-1..0], CAPTURE A57[m-1..0];
STATE IDLE;

A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;

call L1223;
IF (V42 != 0) THEN GOTO L1192;

IF A57[n+2] == 1 THEN GOTO L1192;

A18[9..0] = $203;
CALL L458;
WAIT IDLE, 3 CYCLES, IDLE;
DRSCAN 23 + V1, A29[22+V1..0];

A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;

A18[9..0] = $307;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN V0, A29[V1..0], CAPTURE A31[V1..0];
IF (A31[j] == 0) THEN V42 = 10;
IF (A31[j] == 0) THEN GOTO L1192;
STATE IDLE;

FOR m = 0 to 3;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
i = A174[j * 2];
IF (m == 0) THEN i = i - ((A174[j * 2 + 1]/32) + 1);
IF (m == 1) THEN i = 14 * (A174[j * 2 + 1]/64);
IF (m == 3) THEN i = i + (A174[j * 2 + 1]/32);
CALL L850;
k = j;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
k = 23 + V1;
DRSCAN k, A31[k-1..0];
STATE IDLE;

A18[9..0] = $3F4;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
A31[j+31..j] = $6C48A50F; 
IF (m == 1) THEN A31[j+31..j] = $FFF7FFFF; 
k = 32 + V1;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;

A18[9..0] = $307;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN V0, A29[V1..0], CAPTURE A31[V1..0];
STATE IDLE;
IF (A31[j] == 0) THEN V42 = 10;
IF (V42 != 0) THEN m = 2;
NEXT m;

L1192:

A18[9..0] = $201;
CALL L458;
WAIT IDLE, 1 CYCLES, 1000 USEC, IDLE;

A17[j] = A17[j] | 8;

L1191:

IF (V42 != 0) THEN j = V1;
n = n + A25[j];
NEXT j;

FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;

pop V91;

ENDPROC;

PROCEDURE L141 USES DEVICE_DATA, TEMP_DATA, L107, L458, L138, L135;

PRINT "configuring SRAM device(s)...";

CALL L107;

PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;

FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L146;


V77 = 0;
V78 = 0;

V30 = 0;
V186 = 0;

FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L142;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;

IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;

IF (j < i) THEN V30 = V30 + A43[j];
IF (j < i) THEN V186 = V186 + A92[j];

L142:

NEXT j;


IF(A92[i] == 0) THEN
GOTO L143;

PUSH i;
CALL L135;
POP i;

V187 = V186 + A92[i] - 1;

PUSH i;
CALL L138;
POP i;

L143:

V31 = V30 + A43[i] - 1;

POSTDR V78;

PUSH i;

IF (((A147[i] & 2) == 0) ||
V393) THEN
GOTO L1094;

A18[9..0] = $2EE;
CALL L458;

L1094:

IF ((A17[i] & 64) == 0) THEN
GOTO L144;

A18[9..0] = $281;
CALL L458;

FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;

POP i;
PUSH i;

L144:

IF (((A17[i] & 128) == 0) || (V230 == 0)) THEN
GOTO L145;

A18[9..0] = $00D;
CALL L458;

WAIT 2500 USEC;

L145:

A18[9..0] = $002;
CALL L458;

FOR i = 0 TO 20;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;

POP i;

DRSCAN A43[i], A42[V31..V30];

IF (USE_REV0_PROG_ALG) THEN DRSCAN 32, A30[31..0];

PUSH i;

A18[9..0] = $004;
CALL L458;

POP i;

PREDR V77;
POSTDR V78;

DRSCAN A59[i], A29[A59[i]-1..0], CAPTURE A45[A59[i]-1..0];

IF !A45[A60[i]] THEN V42 = 10;

PUSH i;

IF (((A147[i] & 2) == 0) ||
V393) THEN
GOTO L1095;

WAIT IDLE, 8192 CYCLES, 2048 USEC, IDLE;

A18[9..0] = $1EE;
CALL L458;

L1095:

CALL L107;

POP i;

L146:

NEXT i;

PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;

IF (V42 != 0) THEN
GOTO L147;

V76 = 1;

L147:

ENDPROC;

































































































PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;

PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;

IF (!V56) THEN GOTO L459;

V56 = 0;
V41 = 50;

IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;

V27 = 50;
A32[49..0] = A30[49..0];

L459:

FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;

A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];

IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;

A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];

V27 = V27 + A25[i];
GOTO L465;

L460:

IF ((A17[i] & 2) != 0) THEN GOTO L461;

A32[(V27 + 9)..V27] = $3FF;

IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;

V27 = V27 + 10;
GOTO L465;

L461:

IF (!V57) THEN GOTO L462;


A32[(V27 + 9)..V27] = $02A;

V27 = V27 + 10;
GOTO L465;

L462:

l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;

A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;


L465:

NEXT i;

IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;

STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;

L466:
IRSCAN V27, A32[(V27 - 1)..0];

V57 = 0;

WAIT IRPAUSE, V83 USEC, IRPAUSE;

IF (V91) THEN GOTO L467;

STATE IDLE;
WAIT 3 CYCLES;

L467:

POP l;
POP j;
POP i;
ENDPROC;









































































































































PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;


V23 = 0;
V24 = 0;

FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;

FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;

L683:
IF (V74 && !V216) THEN A30[V24] = 0;

L684:

V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;


V49 = 0;

ENDPROC;
















PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;

PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;




' END OF FILE
CRC 0FC8;
